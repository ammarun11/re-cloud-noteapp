# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mongo-config
#   labels:
#     app: mongo
# data:
#   MONGODB_HOST: "mongo"
#   MONGODB_DB: "notesdb"
#   PORT: "4000"
# ---
apiVersion: v1
kind: PersistentVolume # Create a PV
metadata:
  name: mongo-data # Sets PV's name
  labels:
    type: local # Sets PV's type to local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/db-ammar" # Sets the volume's path
---
apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  name: mongo-data-claim # Sets name of PV
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce # Sets read and write access
  resources:
    requests:
      storage: 5Gi # Sets volume size
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo # Sets Image
          ports:
            - containerPort: 27017  # Exposes container port
          envFrom:
            - configMapRef:
                name: mongo-config
          volumeMounts:
            - mountPath: /data/db
              name: mongodb
      volumes:
        - name: mongodb
          persistentVolumeClaim:
            claimName: mongo-data-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  selector:
    matchLabels:
      app: node-app
  replicas: 2
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers:
        - name: node-app
          image: palopalepalo/noteapp:latest
          ports:
            - containerPort: 4000
        env:
        - name : MONGODB_HOST
          value : "host"
        - name : MONGODB_DB
          value: "notesdb"
        - name : PORT
          value: "4000"